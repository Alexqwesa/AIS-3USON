version: "3.9"
services:
  ais3uson:
    image: ais3uson
    pull_policy: build # never
    build:
      context: ./
      dockerfile: ./Dockerfile
    deploy:
      replicas: 1
    ports:
      - "48080:48080"
      - "48081:48081" # useful for testing, required --debug-portoption
    restart: always
    command: --mysql_host aismysql --conf-dir "/run/secrets" --debug-port
    links:
      - aismysql
    networks:
      frontend:
      backend:
    secrets:
      - mysql-web-worker-password
      - cert.pem
      - privkey.pem
  aismysql:
    image: mysql:8.0.16
    deploy:
      replicas: 1
      placement: # main db should run only once and always on the same node
        constraints: [node.role == manager]
    volumes:
      - ais-mysql-data:/var/lib/mysql
      - ../sql/mysql:/docker-entrypoint-initdb.d
    secrets:
      - mysql-root-password
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    # command: --default-authentication-plugin=mysql_native_password
    command:  --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
     MYSQL_DATABASE: kcson
     MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql-root-password
    ports:
      - "3307:3306"
    networks:
      backend:
  adminer:  # OPTIONAL
    deploy:
      replicas: 1
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      frontend:
      backend:
#  backup: # TODO
#    image: backup-service
#    volumes:
#      - data-volume:/var/lib/backup/data


volumes:
  ais-mysql-data:
#  certificate:
#    secret:
#      secretName: ais3uson-https-cert

secrets:
  cert.pem:
    file: secrets/cert.pem
  privkey.pem:
    file: secrets/privkey.pem
  mysql-web-worker-password:
    file: secrets/mysql-web-worker-password
  mysql-root-password:
    file: secrets/mysql-root-password
networks:
  frontend:
  backend:

#healthcheck:
#  test: ["CMD", "curl", "-f", "http://localhost"]
#  interval: 1m30s
#  timeout: 10s
#  retries: 3
#  start_period: 40s